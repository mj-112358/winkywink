version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: wink_analytics
      POSTGRES_USER: wink_user
      POSTGRES_PASSWORD: secure_wink_password_2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wink-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wink_user -d wink_analytics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - wink-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Wink Backend API
  wink-api:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    environment:
      - DATABASE_URL=postgresql://wink_user:secure_wink_password_2025@postgres:5432/wink_analytics
      - REDIS_URL=redis://redis:6379
      - ENABLE_RLS=true
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-generate-secure-key-here}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ALLOWED_ORIGINS=https://winkai.in,https://api.winkai.in
      - ALLOW_STORE_CREATION=false
      - ENVIRONMENT=production
    volumes:
      - ./backend/assets:/app/assets
      - ./backend/processors:/app/processors
      - ./backend/models:/app/models
    networks:
      - wink-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Static Files)
  wink-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    volumes:
      - frontend_dist:/app/dist
    networks:
      - wink-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites:/etc/nginx/sites-enabled:ro
      - frontend_dist:/var/www/html:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - wink-network
    depends_on:
      - wink-api
      - wink-frontend
    restart: unless-stopped

  # SSL Certificate Manager
  certbot:
    image: certbot/certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./nginx/certbot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@winkai.in --agree-tos --no-eff-email -d winkai.in -d www.winkai.in -d api.winkai.in

networks:
  wink-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  frontend_dist: